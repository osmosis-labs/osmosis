# This workflow pushes new osmosis docker images on every new tag.
#
# On every new `vX.Y.Z` tag the following images are pushed:
#
# osmolabs/osmosis:X.Y.Z    # is pushed
# osmolabs/osmosis:X.Y      # is updated to X.Y.Z
# osmolabs/osmosis:X        # is updated to X.Y.Z
# osmolabs/osmosis:latest   # is updated to X.Y.Z
#
# The same osmosisd binary is copied in different base runner images:
#
# - `osmolabs/osmosis:X.Y.Z`             uses `gcr.io/distroless/static` 
# - `osmolabs/osmosis:X.Y.Z-distroless`  uses `gcr.io/distroless/static` 
# - `osmolabs/osmosis:X.Y.Z-nonroot`     uses `gcr.io/distroless/static:nonroot`
# - `osmolabs/osmosis:X.Y.Z-alpine`      uses `alpine:3.16` 
#
# All the images above have support for linux/amd64 and linux/arm64.
#
# Due to QEMU virtualization used to build multi-platform docker images
# this workflow might take a while to complete.

name: Push Docker Images

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+' # ignore rc
  
env:
  DOCKER_REPOSITORY: osmolabs/osmosis
  RUNNER_BASE_IMAGE_DISTROLESS: gcr.io/distroless/static
  RUNNER_BASE_IMAGE_NONROOT: gcr.io/distroless/static:nonroot
  RUNNER_BASE_IMAGE_ALPINE: alpine:3.16

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v2
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Find go version
        id: find_go_version
        run: |
          GO_VERSION=$(cat go.mod | grep -E 'go [0-9].[0-9]+' | cut -d ' ' -f 2)
          echo "::set-output name=go_version::$(echo ${GO_VERSION})"

      # Distroless Docker image (default)
      -
        name: Docker meta (distroless)
        id: meta_distroless
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REPOSITORY }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern={{version}}-distroless
            type=semver,pattern={{major}}.{{minor}}-distroless
            type=semver,pattern={{major}}-distroless
      - 
        name: Build and push (distroless)
        id: build_push_distroless
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            GO_VERSION=${{ steps.find_go_version.outputs.go_version }}
            RUNNER_IMAGE=${{ env.RUNNER_BASE_IMAGE_DISTROLESS }}
          tags: ${{ steps.meta_distroless.outputs.tags }}

      # Distroless nonroot Docker image
      -
        name: Docker meta (nonroot)
        id: meta_nonroot
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REPOSITORY }}
          flavor: |
            latest=false
            suffix=-nonroot
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - 
        name: Build and push (nonroot)
        id: build_push_nonroot
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            GO_VERSION=${{ steps.find_go_version.outputs.go_version }}
            RUNNER_IMAGE=${{ env.RUNNER_BASE_IMAGE_NONROOT }}
          tags: ${{ steps.meta_nonroot.outputs.tags }}
      
      # Alpine Docker image
      -
        name: Docker meta (alpine)
        id: meta_alpine
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REPOSITORY }}
          flavor: |
            latest=false
            suffix=-alpine
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - 
        name: Build and push (alpine)
        id: build_push_alpine
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            GO_VERSION=${{ steps.find_go_version.outputs.go_version }}
            RUNNER_IMAGE=${{ env.RUNNER_BASE_IMAGE_ALPINE }}
          tags: ${{ steps.meta_alpine.outputs.tags }}
