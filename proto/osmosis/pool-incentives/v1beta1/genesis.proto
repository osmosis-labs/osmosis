syntax = "proto3";
package osmosis.poolincentives.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "osmosis/pool-incentives/v1beta1/incentives.proto";

option go_package = "github.com/osmosis-labs/osmosis/v16/x/pool-incentives/types";

// GenesisState defines the pool incentives module's genesis state.
message GenesisState {
  // params defines all the paramaters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
  repeated google.protobuf.Duration lockable_durations = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"lockable_durations\""
  ];
  DistrInfo distr_info = 3 [
    (gogoproto.nullable) = true,
    (gogoproto.moretags) = "yaml:\"distr_info\""
  ];
  PoolToGauges pool_to_gauges = 4 [
    (gogoproto.nullable) = true,
    (gogoproto.moretags) = "yaml:\"pool_to_gauges\""
  ];
}

// MigrationRecords contains all the links between balancer and concentrated
// pools.
//
// This is copied over from the gamm proto file in order to circumnavigate
// the circular dependency between the two modules.
message MigrationRecords {
  repeated BalancerToConcentratedPoolLink balancer_to_concentrated_pool_links =
      1 [ (gogoproto.nullable) = false ];
}

// BalancerToConcentratedPoolLink defines a single link between a single
// balancer pool and a single concentrated liquidity pool. This link is used to
// allow a balancer pool to migrate to a single canonical full range
// concentrated liquidity pool position
// A balancer pool can be linked to a maximum of one cl pool, and a cl pool can
// be linked to a maximum of one balancer pool.
//
// This is copied over from the gamm proto file in order to circumnavigate
// the circular dependency between the two modules.
message BalancerToConcentratedPoolLink {
  option (gogoproto.equal) = true;
  uint64 balancer_pool_id = 1;
  uint64 cl_pool_id = 2;
}