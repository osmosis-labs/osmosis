syntax = "proto3";
package osmosis.cosmwasmpool.v1beta1;

import "gogoproto/gogo.proto";
import "osmosis/cosmwasmpool/v1beta1/params.proto";
import "osmosis/cosmwasmpool/v1beta1/tx.proto";

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/osmosis-labs/osmosis/v19/x/cosmwasmpool/client/queryproto";

service Query {
  // Pools returns all cosmwasm pools
  rpc Pools(PoolsRequest) returns (PoolsResponse) {
    option (google.api.http).get = "/osmosis/cosmwasmpool/v1beta1/pools";
  }

  // Params returns the parameters of the x/cosmwasmpool module.
  rpc Params(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http).get = "/osmosis/cosmwasmpool/v1beta1/params";
  }

  rpc ContractInfoByPoolId(ContractInfoByPoolIdRequest)
      returns (ContractInfoByPoolIdResponse) {
    option (google.api.http).get =
        "/osmosis/cosmwasmpool/v1beta1/contract_info";
  }
}

//=============================== ContractInfoByPoolId
message ParamsRequest {}
message ParamsResponse { Params params = 1 [ (gogoproto.nullable) = false ]; }

//=============================== Pools
message PoolsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}
message PoolsResponse {
  repeated google.protobuf.Any pools = 1
      [ (cosmos_proto.accepts_interface) = "PoolI" ];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

//=============================== ContractInfoByPoolId
message ContractInfoByPoolIdRequest {
  // pool_id is the pool id of the requested pool.
  uint64 pool_id = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
}
message ContractInfoByPoolIdResponse {
  // contract_address is the pool address and contract address
  // of the requested pool id.
  string contract_address = 1
      [ (gogoproto.moretags) = "yaml:\"contract_address\"" ];

  // code_id is the code id of the requested pool id.
  uint64 code_id = 2 [ (gogoproto.moretags) = "yaml:\"code_id\"" ];
}
