syntax = "proto3";
package osmosis.gamm.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

// Params holds parameters for the incentives module
message Params {
  repeated cosmos.base.v1beta1.Coin pool_creation_fee = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags) = "yaml:\"pool_creation_fee\"",
    (gogoproto.nullable) = false
  ];
}

option go_package = "github.com/osmosis-labs/osmosis/v14/x/gamm/types";

// GenesisState defines the gamm module's genesis state.
message GenesisState {
  repeated google.protobuf.Any pools = 1
      [ (cosmos_proto.accepts_interface) = "PoolI" ];
  // will be renamed to next_pool_id in an upcoming version
  uint64 next_pool_number = 2;
  Params params = 3 [ (gogoproto.nullable) = false ];
  MigrationRecords migration_records = 4;
}

// MigrationRecords contains all the links between gamm and concentrated pools
message MigrationRecords {
  repeated GammToConcentratedPoolLink gamm_to_concentrated_pool_links = 1
      [ (gogoproto.nullable) = false ];
}

// GammToConcentratedPoolLink defines a single link between a single gamm pool
// and a single concentrated liquidity pool. This link is used to allow a gamm
// pool to migrate to a single canonical concentrated liquidity pool
message GammToConcentratedPoolLink {
  option (gogoproto.equal) = true;

  uint64 gamm_pool_id = 1;
  uint64 cl_pool_id = 2;
}
