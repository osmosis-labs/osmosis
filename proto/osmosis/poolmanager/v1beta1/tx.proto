syntax = "proto3";
package osmosis.poolmanager.v1beta1;

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "osmosis/poolmanager/v1beta1/swap_route.proto";

option go_package = "github.com/osmosis-labs/osmosis/v21/x/poolmanager/types";

service Msg {
  rpc SwapExactAmountIn(MsgSwapExactAmountIn)
      returns (MsgSwapExactAmountInResponse);
  rpc SwapExactAmountOut(MsgSwapExactAmountOut)
      returns (MsgSwapExactAmountOutResponse);
  rpc SplitRouteSwapExactAmountIn(MsgSplitRouteSwapExactAmountIn)
      returns (MsgSplitRouteSwapExactAmountInResponse);
  rpc SplitRouteSwapExactAmountOut(MsgSplitRouteSwapExactAmountOut)
      returns (MsgSplitRouteSwapExactAmountOutResponse);
  rpc SetDenomPairTakerFee(MsgSetDenomPairTakerFee)
      returns (MsgSetDenomPairTakerFeeResponse);
}

// ===================== MsgSwapExactAmountIn
message MsgSwapExactAmountIn {
  option (amino.name) = "osmosis/poolmanager/swap-exact-amount-in";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  repeated SwapAmountInRoute routes = 2 [ (gogoproto.nullable) = false ];
  cosmos.base.v1beta1.Coin token_in = 3 [
    (gogoproto.moretags) = "yaml:\"token_in\"",
    (gogoproto.nullable) = false
  ];
  string token_out_min_amount = 4 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"token_out_min_amount\"",
    (gogoproto.nullable) = false
  ];
}

message MsgSwapExactAmountInResponse {
  string token_out_amount = 1 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"token_out_amount\"",
    (gogoproto.nullable) = false
  ];
}

// ===================== MsgSplitRouteSwapExactAmountIn
message MsgSplitRouteSwapExactAmountIn {
  option (amino.name) = "osmosis/poolmanager/split-amount-in";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  repeated SwapAmountInSplitRoute routes = 2 [ (gogoproto.nullable) = false ];
  string token_in_denom = 3
      [ (gogoproto.moretags) = "yaml:\"token_in_denom\"" ];
  string token_out_min_amount = 4 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"token_out_min_amount\"",
    (gogoproto.nullable) = false
  ];
}

message MsgSplitRouteSwapExactAmountInResponse {
  string token_out_amount = 1 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"token_out_amount\"",
    (gogoproto.nullable) = false
  ];
}

// ===================== MsgSwapExactAmountOut
message MsgSwapExactAmountOut {
  option (amino.name) = "osmosis/poolmanager/swap-exact-amount-out";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  repeated SwapAmountOutRoute routes = 2 [ (gogoproto.nullable) = false ];
  string token_in_max_amount = 3 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"token_in_max_amount\"",
    (gogoproto.nullable) = false
  ];
  cosmos.base.v1beta1.Coin token_out = 4 [
    (gogoproto.moretags) = "yaml:\"token_out\"",
    (gogoproto.nullable) = false
  ];
}

message MsgSwapExactAmountOutResponse {
  string token_in_amount = 1 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"token_in_amount\"",
    (gogoproto.nullable) = false
  ];
}

// ===================== MsgSplitRouteSwapExactAmountOut
message MsgSplitRouteSwapExactAmountOut {
  option (amino.name) = "osmosis/poolmanager/split-amount-out";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  repeated SwapAmountOutSplitRoute routes = 2 [ (gogoproto.nullable) = false ];
  string token_out_denom = 3
      [ (gogoproto.moretags) = "yaml:\"token_out_denom\"" ];
  string token_in_max_amount = 4 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"token_in_max_amount\"",
    (gogoproto.nullable) = false
  ];
}

message MsgSplitRouteSwapExactAmountOutResponse {
  string token_in_amount = 1 [

    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.moretags) = "yaml:\"token_in_amount\"",
    (gogoproto.nullable) = false
  ];
}

// ===================== MsgSetDenomPairTakerFee
message MsgSetDenomPairTakerFee {
  option (amino.name) = "osmosis/poolmanager/set-denom-pair-taker-fee";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  repeated DenomPairTakerFee denom_pair_taker_fee = 2 [
    (gogoproto.moretags) = "yaml:\"denom_pair_taker_fee\"",
    (gogoproto.nullable) = false
  ];
}

message MsgSetDenomPairTakerFeeResponse { bool success = 1; }

message DenomPairTakerFee {
  // denom0 and denom1 get automatically lexigographically sorted
  // when being stored, so the order of input here does not matter.
  string denom0 = 1 [ (gogoproto.moretags) = "yaml:\"denom0\"" ];
  string denom1 = 2 [ (gogoproto.moretags) = "yaml:\"denom1\"" ];
  string taker_fee = 3 [

    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"taker_fee\"",
    (gogoproto.nullable) = false
  ];
}
