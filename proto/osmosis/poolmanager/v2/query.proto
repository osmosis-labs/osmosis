syntax = "proto3";
package osmosis.poolmanager.v2;

import "gogoproto/gogo.proto";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/osmosis-labs/osmosis/v21/x/poolmanager/client/queryprotov2";

service Query {
  // SpotPriceV2 defines a gRPC query handler that returns the spot price given
  // a base denomination and a quote denomination.
  // The returned spot price has 36 decimal places. However, some of
  // modules perform sig fig rounding so most of the rightmost decimals can be
  // zeroes.
  rpc SpotPriceV2(SpotPriceRequest) returns (SpotPriceResponse) {
    option (google.api.http).get =
        "/osmosis/poolmanager/v2/pools/{pool_id}/prices";
  }
}

// SpotPriceRequest defines the gRPC request structure for a SpotPrice
// query.
message SpotPriceRequest {
  uint64 pool_id = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
  string base_asset_denom = 2
      [ (gogoproto.moretags) = "yaml:\"base_asset_denom\"" ];
  string quote_asset_denom = 3
      [ (gogoproto.moretags) = "yaml:\"quote_asset_denom\"" ];
}

// SpotPriceResponse defines the gRPC response structure for a SpotPrice
// query.
message SpotPriceResponse {
  // String of the BigDec. Ex) 10.203uatom
  string spot_price = 1 [
    (gogoproto.customtype) = "github.com/osmosis-labs/osmosis/osmomath.BigDec",
    (gogoproto.moretags) = "yaml:\"spot_price\"",
    (gogoproto.nullable) = false
  ];
}
