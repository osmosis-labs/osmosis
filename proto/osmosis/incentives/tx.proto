syntax = "proto3";
package osmosis.incentives;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "osmosis/incentives/gauge.proto";
import "osmosis/lockup/lock.proto";

option go_package = "github.com/osmosis-labs/osmosis/v7/x/incentives/types";

service Msg {
  rpc CreateGauge(MsgCreateGauge) returns (MsgCreateGaugeResponse);
  rpc AddToGauge(MsgAddToGauge) returns (MsgAddToGaugeResponse);
}

// Create a gague to distribute rewards to users
message MsgCreateGauge {
  // Flag to show if it's a perpetual or non-perpetual gauge
  // Non-perpetual gauges distribute their tokens equally per epoch while the
  // gauge is in the active period. Perpetual gauges distribute all their tokens
  // at a single time and only distribute their tokens again once the gauge is
  // refilled
  bool is_perpetual = 1;
  // Address of gauge creator
  string owner = 2 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  // Distribute to a lock by time duration or by timestamp
  osmosis.lockup.QueryCondition distribute_to = 3
      [ (gogoproto.nullable) = false ];
  // Coin(s) to be distributed
  repeated cosmos.base.v1beta1.Coin coins = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // Distribution start time
  google.protobuf.Timestamp start_time = 5 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"timestamp\""
  ];
  // Number of epochs distribution will be done over
  uint64 num_epochs_paid_over = 6;
}
message MsgCreateGaugeResponse {}

// Add coins to a gauge previously created gauge
message MsgAddToGauge {
  // Address (owner) must match creator of initial gauge
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  // ID of gauge that rewards are getting added to
  uint64 gauge_id = 2;
  // Coin(s) to add to gauge
  repeated cosmos.base.v1beta1.Coin rewards = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
message MsgAddToGaugeResponse {}
