syntax = "proto3";
package osmosis.incentives;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "osmosis/lockup/lock.proto";

option go_package = "github.com/osmosis-labs/osmosis/v7/x/incentives/types";

// Gauge is a struct that works as a unit for each distribution
// information defined by x/incentives module.
message Gauge {
  // ID is the unique id of the gauge.
  // The ID of the gauge is decided upon gauge creation, incrementing by 1 for
  // every gauge.
  uint64 id = 1;
  // Is Perpetual defines whether the gauge is permanent or multi-epoch
  // distribution.
  bool is_perpetual = 2;
  // Distribute To is the lock query condition that the gauge reward are to be
  // distributed to.
  osmosis.lockup.QueryCondition distribute_to = 3
      [ (gogoproto.nullable) = false ];
  // Coins is the total amount of Coins that has been in the gauge.
  // Multiple coins can be distributed.
  repeated cosmos.base.v1beta1.Coin coins = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // Start Time is the distribution start time for the gauge.
  google.protobuf.Timestamp start_time = 5 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];
  // Num Epochs Paid Over is the number of epochs distribution will be done.
  uint64 num_epochs_paid_over = 6;
  // Filled Epoch is the number of epochs distributed already.
  uint64 filled_epochs = 7;
  // Distributed Coins is the already distributed coins from the gauge.
  repeated cosmos.base.v1beta1.Coin distributed_coins = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message LockableDurationsInfo {
  repeated google.protobuf.Duration lockable_durations = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"lockable_durations\""
  ];
}