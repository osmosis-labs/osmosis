syntax = "proto3";
package osmosis.concentratedliquidity;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/osmosis-labs/osmosis/v15/x/concentrated-liquidity/types";

message Params {
  // authorized_tick_spacing is an array of uint64s that represents the tick
  // spacing values concentrated-liquidity pools can be created with. For
  // example, an authorized_tick_spacing of [1, 10, 30] allows for pools
  // to be created with tick spacing of 1, 10, or 30.
  repeated uint64 authorized_tick_spacing = 1
      [ (gogoproto.moretags) = "yaml:\"authorized_tick_spacing\"" ];
  repeated string authorized_swap_fees = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"authorized_swap_fees\"",
    (gogoproto.nullable) = false
  ];
  // balancer_shares_reward_discount is the rate by which incentives flowing
  // from CL to Balancer pools will be discounted to encourage LPs to migrate.
  // e.g. a rate of 0.05 means Balancer LPs get 5% less incentives than full
  // range CL LPs.
  string balancer_shares_reward_discount = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"balancer_shares_reward_discount\"",
    (gogoproto.nullable) = false
  ];
  // authorized_quote_denoms is a list of quote denoms that can be used as
  // token1 when creating a pool. We limit the quote assets to a small set for
  // the purposes of having convinient price increments stemming from tick to
  // price conversion. These increments are in a human readable magnitude only
  // for token1 as a quote. For limit orders in the future, this will be a
  // desirable property in terms of UX as to allow users to set limit orders at
  // prices in terms of token1 (quote asset) that are easy to reason about.
  repeated string authorized_quote_denoms = 4
      [ (gogoproto.moretags) = "yaml:\"authorized_quote_denoms\"" ];
}
