syntax = "proto3";
package osmosis.concentratedliquidity.v1beta1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/osmosis-labs/osmosis/v15/x/concentrated-liquidity/types";

// IncentiveRecord is the high-level struct we use to deal with an independent
// incentive being distributed on a pool. Note that PoolId, Denom, and MinUptime
// are included in the key so we avoid storing them in state, hence the
// distinction between IncentiveRecord and IncentiveRecordBody.
message IncentiveRecord {
  uint64 pool_id = 1;
  // incentive_denom is the denom of the token being distributed as part of this
  // incentive record
  string incentive_denom = 2
      [ (gogoproto.moretags) = "yaml:\"incentive_denom\"" ];
  // incentiveCreator is the address that created the incentive record. This
  // address does not have any special privileges â€“ it is only kept to keep
  // incentive records created by different addresses separate.
  string incentive_creator_addr = 3
      [ (gogoproto.moretags) = "yaml:\"incentive_creator_addr\"" ];
  // incentive record body holds necessary
  IncentiveRecordBody incentive_record_body = 4 [
    (gogoproto.moretags) = "yaml:\"incentive_record_body\"",
    (gogoproto.nullable) = false
  ];
  // min_uptime is the minimum uptime required for liquidity to qualify for this
  // incentive. It should be always be one of the supported uptimes in
  // types.SupportedUptimes
  google.protobuf.Duration min_uptime = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"min_uptime\""
  ];
}

// IncentiveRecordBody represents the body stored in state for each individual
// record.
message IncentiveRecordBody {
  // remaining_amount is the total amount of incentives to be distributed
  string remaining_amount = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"remaining_amount\"",
    (gogoproto.nullable) = false
  ];

  // emission_rate is the incentive emission rate per second
  string emission_rate = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"swap_fee\"",
    (gogoproto.nullable) = false
  ];

  // start_time is the time when the incentive starts distributing
  google.protobuf.Timestamp start_time = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];
}