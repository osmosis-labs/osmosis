syntax = "proto3";
package osmosis.concentratedliquidity.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/osmosis-labs/osmosis/v19/x/concentrated-liquidity/types";

// CreateConcentratedLiquidityPoolsProposal is a gov Content type for creating
// concentrated liquidity pools. If a CreateConcentratedLiquidityPoolsProposal
// passes, the pools are created via pool manager module account.
message CreateConcentratedLiquidityPoolsProposal {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;

  repeated PoolRecord pool_records = 3 [
    (gogoproto.moretags) = "yaml:\"pool_records\"",
    (gogoproto.nullable) = false
  ];
}
// TickSpacingDecreaseProposal is a gov Content type for proposing a tick
// spacing decrease for a pool. The proposal will fail if one of the pools do
// not exist, or if the new tick spacing is not less than the current tick
// spacing.
message TickSpacingDecreaseProposal {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  repeated PoolIdToTickSpacingRecord pool_id_to_tick_spacing_records = 3
      [ (gogoproto.nullable) = false ];
}

// PoolIdToTickSpacingRecord is a struct that contains a pool id to new tick
// spacing pair.
message PoolIdToTickSpacingRecord {
  option (gogoproto.equal) = true;

  uint64 pool_id = 1;
  uint64 new_tick_spacing = 2;
}

message PoolRecord {
  option (gogoproto.equal) = true;

  string denom0 = 1 [ (gogoproto.moretags) = "yaml:\"denom0\"" ];
  string denom1 = 2 [ (gogoproto.moretags) = "yaml:\"denom1\"" ];
  uint64 tick_spacing = 3 [ (gogoproto.moretags) = "yaml:\"tick_spacing\"" ];
  reserved 4;
  string spread_factor = 5 [

    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"spread_factor\"",
    (gogoproto.nullable) = false
  ];
}