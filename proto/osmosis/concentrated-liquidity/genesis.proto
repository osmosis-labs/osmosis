syntax = "proto3";
package osmosis.concentratedliquidity.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/any.proto";
import "osmosis/concentrated-liquidity/params.proto";
import "osmosis/concentrated-liquidity/position.proto";
import "osmosis/concentrated-liquidity/tickInfo.proto";

option go_package = "github.com/osmosis-labs/osmosis/v15/x/concentrated-liquidity/types/genesis";

// FullTick contains tick index and pool id along with other tick model
// information.
message FullTick {
  // pool id associated with the tick.
  uint64 pool_id = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
  // tick's index.
  int64 tick_index = 2 [ (gogoproto.moretags) = "yaml:\"tick_index\"" ];
  // tick's info.
  TickInfo info = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"tick_info\""
  ];
}

// PoolData represents a serialized pool along with its ticks
// for genesis state.
message PoolData {
  // pool struct
  google.protobuf.Any pool = 1 [ (cosmos_proto.accepts_interface) = "PoolI" ];
  // pool's ticks
  repeated FullTick ticks = 2
      [ (gogoproto.moretags) = "yaml:\"ticks\"", (gogoproto.nullable) = false ];
}

// GenesisState defines the concentrated liquidity module's genesis state.
message GenesisState {
  // params are all the parameters of the module
  Params params = 1 [ (gogoproto.nullable) = false ];
  // pool data containining serialized pool struct and ticks.
  repeated PoolData pool_data = 2;

  repeated Position positions = 3 [ (gogoproto.nullable) = false ];

  uint64 next_position_id = 4
      [ (gogoproto.moretags) = "yaml:\"next_position_id\"" ];
}
