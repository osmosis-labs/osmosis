syntax = "proto3";
// this is a legacy package that requires additional migration logic
// in order to use the correct packge. Decision made to use legacy package path
// until clear steps for migration logic and the unknowns for state breaking are
// investigated for changing proto package.
package osmosis.concentratedliquidity.v1beta1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/osmosis-labs/osmosis/v15/x/concentrated-liquidity/model";

message TickInfo {
  string liquidity_gross = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"liquidity_gross\"",
    (gogoproto.nullable) = false
  ];
  string liquidity_net = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags) = "yaml:\"liquidity_net\"",
    (gogoproto.nullable) = false
  ];
  // Total fees accumulated in the opposite direction that the tick was last
  // crossed. i.e. if the current tick is to the right of this tick (meaning its currently a greater price),
  // then this is the total fees accumulated below the tick. 
  // If the current tick is to the left of this tick (meaning its currently at a lower price), 
  // then this is the total fees accumulated above the tick.
  repeated cosmos.base.v1beta1.DecCoin
      fee_growth_opposite_direction_of_last_traversal = 3 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable) = false
  ];
  repeated UptimeTracker uptime_trackers = 4 [
    (gogoproto.moretags) = "yaml:\"uptime_trackers\"",
    (gogoproto.nullable) = false
  ];
}

message UptimeTracker {
  repeated cosmos.base.v1beta1.DecCoin uptime_growth_outside = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable) = false
  ];
}
