syntax = "proto3";
package osmosis.concentratedliquidity.poolmodel.concentrated.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/osmosis-labs/osmosis/v21/x/concentrated-liquidity/model";

service Msg {
  rpc CreateConcentratedPool(MsgCreateConcentratedPool)
      returns (MsgCreateConcentratedPoolResponse);
}

// ===================== MsgCreateConcentratedPool
message MsgCreateConcentratedPool {
  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  string denom0 = 2 [ (gogoproto.moretags) = "yaml:\"denom0\"" ];
  string denom1 = 3 [ (gogoproto.moretags) = "yaml:\"denom1\"" ];
  uint64 tick_spacing = 4 [ (gogoproto.moretags) = "yaml:\"tick_spacing\"" ];
  string spread_factor = 5 [

    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.moretags) = "yaml:\"spread_factor\"",
    (gogoproto.nullable) = false
  ];
}

// Returns a unique poolID to identify the pool with.
message MsgCreateConcentratedPoolResponse {
  uint64 pool_id = 1 [ (gogoproto.customname) = "PoolID" ];
}
