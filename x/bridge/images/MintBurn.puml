@startuml

participant "Alice BTC addr" as AliceBTC
participant "BTC vault" as BTCVault
participant "BTC Block Scanner/TSS" as ValidatorsSet
participant "x/bridge" as Bridge
participant "x/tokenfactory" as Tokenfactory
participant "Alice OSMO addr" as AliceOsmosis

== BTC to OSMO ==

AliceBTC --> BTCVault : Send tx with right memo\nincluding the osmo address
ValidatorsSet --> BTCVault : Scan the tx and validate it
ValidatorsSet --> Bridge : Send observed inbound tx
Bridge --> Tokenfactory : Mint **osmobtc** tokens\nto the osmo address\nfrom the memo
note over Tokenfactory
  Admin of the denom
  is the x/bridge module
end note
Tokenfactory --> AliceOsmosis : Update Alice balance
Tokenfactory --> Bridge : Response for the mint
alt failure
  Bridge --> AliceBTC : TODO Refund
end

== OSMO to BTC ==

AliceOsmosis --> Bridge : Call **MsgTransfer**  through **MsgServer**
Bridge --> Bridge : Check if Alice has sufficient balance
Bridge --> Tokenfactory : Burn **osmobtc** tokens\nfrom the osmo address\ngot in the tx
note over Tokenfactory
  Admin of the denom
  is the x/bridge module
end note
Tokenfactory --> AliceOsmosis : Update Alice balance
Tokenfactory --> Bridge : Response for the burn
alt success
  Bridge --> ValidatorsSet : Send outbound tx
  ValidatorsSet --> BTCVault : Release the AliceBTC for Alice
  BTCVault --> AliceBTC : Send a tx with AliceBTC
else failure
  Bridge --> AliceOsmosis : TODO Refund
end

@enduml